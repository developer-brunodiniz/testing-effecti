version: '3.9'

networks:
  effecti:

services:
  postgres:
    image: postgres:15.3
    container_name: postgres
    restart: always
    ports:
      - "5342:5432"
    volumes:
      - "./.docker/postgres:/var/lib/postgresql/data"
    environment:
      POSTGRES_DB: effecti
      POSTGRES_USER: usereffecti
      POSTGRES_PASSWORD: 1233219
      POSTGRES_PORT: 5342
      POSTGRES_HOST_AUTH_METHOD: trust
    networks:
      - effecti

  mysql:
    image: mysql:8.0
    container_name: mysql-app
    restart: always
    tty: true
    ports:
      - "3603:3306"
    volumes:
      - "./.docker/mysql:/var/lib/mysql"
    environment:
      MYSQL_DATABASE: effecti
      MYSQL_USER: usereffecti
      MYSQL_PASSWORD: 1233219
      MYSQL_ROOT_PASSWORD:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      SERVICE_TAGS: dev
      SERVICE_MYSQL: mysql
    depends_on:
      - postgres
    networks:
      - effecti
  
  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - "6397:6379"
    depends_on:
      - postgres
      - mysql
    networks:
      - effecti

  php:
    build: ./.docker/php
    container_name: php
    volumes:
      - ./api:/var/www
    depends_on:
      - postgres
      - mysql
      - redis
    networks:
      - effecti  

  nginx:
    build: ./.docker/nginx
    container_name: nginx
    restart: always
    ports:
      - "8089:80"
    volumes:
      - ./api:/var/www
    depends_on:
      - postgres
      - mysql
      - redis
      - php
    networks:
      - effecti  

  node:
    build:
      context: .
      dockerfile: Appfile
    container_name: node
    restart: always
    ports:
      - 8080:80
    volumes:
      - ./:/app
    depends_on:
      - postgres
      - mysql
      - redis
      - php
      - nginx
    environment:
      NODE_ENV: development
    networks:
      - effecti
